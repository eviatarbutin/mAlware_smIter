from torch.utils.data import Dataset
from PIL import Image
import numpy as np
import numpy
import os
import json

class OurDataset(Dataset):
    def __init__(self, json_path = None):
        super().__init__()
        self.data = {}
        if json_path:
            with open(json_path, "r") as fp:
                self.data = json.load(fp)

    def __getitem__(self, key):
        if key in self.data.keys:
            return self.data[key]
        else:
            return None

    def get_image(self, key):
        if key in self.data.keys and os.path.isfile(key):
            file = open(key, "rb")
            data = file.read()
            file.close()
            return data
        
    def __add__(self, path: str) -> bool:
        if not os.path.isfile(path):
            return False
        else:
            # The path supposed to look like this:
            # malimg_fixed_dataset_imgs\malware_family\image_name
            malware_family = path.split("\\")[1]
            self.data[path] = malware_family
            return True

    def create_dataset_from_current_data(self, path: str):
        with open(path, "w") as fp:
            json.dump(self.data, fp)
        print(len(self.data))
    def __len__(self,):
        return len(self.data)
