import rsa
from constants import *
import os

def generateKeys(publick_path, private_path):
    (publicKey, privateKey) = rsa.newkeys(KEY_SIZE)
    with open(publick_path, 'wb+') as p:
        p.write(publicKey.save_pkcs1('PEM'))
    with open(private_path, 'wb+') as p:
        p.write(privateKey.save_pkcs1('PEM'))

def loadKeys(publick_path, private_path):
    with open(publick_path, 'rb') as p:
        publicKey = rsa.PublicKey.load_pkcs1(p.read())
    with open(private_path, 'rb') as p:
        privateKey = rsa.PrivateKey.load_pkcs1(p.read())
    return privateKey, publicKey

def encrypt(message, key):
    return rsa.encrypt(message.encode(), key)

def decrypt(ciphertext, key):
    try:
        return rsa.decrypt(ciphertext, key).decode()
    except:
        return False
